/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package employeeapp.view;

import employeeapp.model.DBConnection;
import employeeapp.model.Employee;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import employeeapp.model.EmployeeD;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
/**
 *
 * @author Khanyisile
 */
public class ManageEmpJFrame extends javax.swing.JFrame {

    DBConnection db = new DBConnection();
    
    /**
     * Creates new form ManageEmpJFrame
     */
    public ManageEmpJFrame() {
        initComponents();
    }
    
    //Email format constraint
    public static void validateEmailFormat(String email) {
        // Regular expression for validating email format
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
        Pattern pattern = Pattern.compile(emailRegex);
        Matcher matcher = pattern.matcher(email);

        // If the email doesn't match the regex, throw an exception
        if (!matcher.matches()) {
            throw new IllegalArgumentException("The email address is not valid.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jpView = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblView = new javax.swing.JTable();
        btnSearch = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        tfEmpIDView = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        btnDisplay = new javax.swing.JButton();
        btnBackView = new javax.swing.JButton();
        jpAdd = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        tfName = new javax.swing.JTextField();
        tfEmail = new javax.swing.JTextField();
        tfSurname = new javax.swing.JTextField();
        tfAddy = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        CBGender = new javax.swing.JComboBox<>();
        cbDepartment = new javax.swing.JComboBox<>();
        cbRole = new javax.swing.JComboBox<>();
        btnAddEmp = new javax.swing.JButton();
        tfPhoneNum = new javax.swing.JTextField();
        tfDOB = new javax.swing.JTextField();
        tfSalary = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAdd = new javax.swing.JTable();
        btnRefreshTbl1 = new javax.swing.JButton();
        btnBackAdd = new javax.swing.JButton();
        jpEdit = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        tfNameEdit = new javax.swing.JTextField();
        tfEmailEdit = new javax.swing.JTextField();
        tfSurnameEdit = new javax.swing.JTextField();
        tfAddyEdit = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jCBGenderEdit = new javax.swing.JComboBox<>();
        cbDepartmentEdit = new javax.swing.JComboBox<>();
        cbRoleEdit = new javax.swing.JComboBox<>();
        btnUpdate = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        tfEmpID = new javax.swing.JTextField();
        tfDOBEdit = new javax.swing.JTextField();
        tfSalaryEdit = new javax.swing.JTextField();
        tfPhoneEdit = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        EditTbl = new javax.swing.JTable();
        btnRefreshEditTbl = new javax.swing.JButton();
        btnCloseEdit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setPreferredSize(new java.awt.Dimension(776, 500));

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tblView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "Name", "Surname", "Gender", "Date of Birth", "E-Mail", "Phone Number", "Address", "Role ID", "Department ID", "Salary"
            }
        ));
        tblView.setFillsViewportHeight(true);
        tblView.setMinimumSize(new java.awt.Dimension(160, 80));
        tblView.setPreferredSize(new java.awt.Dimension(100, 80));
        tblView.setShowVerticalLines(true);
        tblView.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblView);
        if (tblView.getColumnModel().getColumnCount() > 0) {
            tblView.getColumnModel().getColumn(0).setMinWidth(75);
            tblView.getColumnModel().getColumn(1).setPreferredWidth(60);
        }

        btnSearch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSearch.setText("Search Employee");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDelete.setText("Delete employee");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tfEmpIDView.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel22.setText("Enter Employee ID");

        btnDisplay.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDisplay.setText("Display Table");
        btnDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplayActionPerformed(evt);
            }
        });

        btnBackView.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBackView.setText("Back");
        btnBackView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpViewLayout = new javax.swing.GroupLayout(jpView);
        jpView.setLayout(jpViewLayout);
        jpViewLayout.setHorizontalGroup(
            jpViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpViewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 814, Short.MAX_VALUE)
                    .addGroup(jpViewLayout.createSequentialGroup()
                        .addComponent(btnSearch)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jpViewLayout.createSequentialGroup()
                        .addGroup(jpViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpViewLayout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addGap(18, 18, 18)
                                .addComponent(tfEmpIDView, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnDelete))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jpViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDisplay, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnBackView, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jpViewLayout.setVerticalGroup(
            jpViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpViewLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(tfEmpIDView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDisplay))
                .addGap(29, 29, 29)
                .addComponent(btnSearch)
                .addGap(48, 48, 48)
                .addGroup(jpViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnBackView))
                .addContainerGap(76, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("View Employees", jpView);

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tfName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        tfEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        tfSurname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        tfAddy.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Name");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Phone Number");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Surname");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Role ID");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Department ID");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Gender");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Date of Birth");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("E-Mail");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Salary");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Address");

        CBGender.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CBGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Female", "Male" }));

        cbDepartment.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbDepartment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Human Resources", "Information Technology", "Finance", "Marketing" }));

        cbRole.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Manager", "Developer", "Analyst", "Designer" }));

        btnAddEmp.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAddEmp.setText("Add New Employee");
        btnAddEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEmpActionPerformed(evt);
            }
        });

        tfPhoneNum.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        tfDOB.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        tfSalary.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfName, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                    .addComponent(jLabel2)
                                    .addComponent(tfPhoneNum))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfAddy, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel8)))
                            .addComponent(jLabel1))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(CBGender, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbRole, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5)
                            .addComponent(cbDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10))
                                .addGap(83, 83, 83))
                            .addComponent(tfEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfSalary, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnAddEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CBGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel10)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfAddy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnAddEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tblAdd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "Name", "Surname", "Gender", "Date of Birth", "E-Mail", "Phone Number", "Address", "Role ID", "Department ID", "Salary"
            }
        ));
        tblAdd.setFillsViewportHeight(true);
        tblAdd.setMinimumSize(new java.awt.Dimension(160, 80));
        tblAdd.setPreferredSize(new java.awt.Dimension(100, 80));
        tblAdd.setShowVerticalLines(true);
        tblAdd.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblAdd);
        if (tblAdd.getColumnModel().getColumnCount() > 0) {
            tblAdd.getColumnModel().getColumn(0).setMinWidth(75);
            tblAdd.getColumnModel().getColumn(1).setPreferredWidth(60);
        }

        btnRefreshTbl1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnRefreshTbl1.setText("Refresh Table");
        btnRefreshTbl1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshTbl1ActionPerformed(evt);
            }
        });

        btnBackAdd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBackAdd.setText("Back");
        btnBackAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpAddLayout = new javax.swing.GroupLayout(jpAdd);
        jpAdd.setLayout(jpAddLayout);
        jpAddLayout.setHorizontalGroup(
            jpAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAddLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpAddLayout.createSequentialGroup()
                        .addGroup(jpAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addContainerGap())
                    .addGroup(jpAddLayout.createSequentialGroup()
                        .addComponent(btnRefreshTbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBackAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jpAddLayout.setVerticalGroup(
            jpAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAddLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jpAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRefreshTbl1)
                    .addComponent(btnBackAdd))
                .addGap(32, 32, 32))
        );

        jTabbedPane1.addTab("Add New Employee", jpAdd);

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tfNameEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        tfEmailEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        tfSurnameEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        tfAddyEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Name");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Phone Number");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setText("Surname");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setText("Role ID");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setText("Department ID");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel16.setText("Gender");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel17.setText("Date of Birth");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel18.setText("E-Mail");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel19.setText("Salary");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel20.setText("Address");

        jCBGenderEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCBGenderEdit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Female", "Male" }));
        jCBGenderEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBGenderEditActionPerformed(evt);
            }
        });

        cbDepartmentEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbDepartmentEdit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Human Resources", "Information Technology", "Finance", "Marketing" }));
        cbDepartmentEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDepartmentEditActionPerformed(evt);
            }
        });

        cbRoleEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbRoleEdit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Manager", "Developer", "Analyst", "Designer" }));

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setText("Update Employee Details");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel21.setText("Enter Employee ID:");

        tfEmpID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        tfDOBEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        tfSalaryEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        tfPhoneEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfNameEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel21)
                            .addComponent(tfPhoneEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(tfSurnameEdit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                        .addComponent(tfAddyEdit, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jCBGenderEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbRoleEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbDepartmentEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17)
                            .addComponent(jLabel15)
                            .addComponent(tfDOBEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel19))
                                .addGap(83, 83, 83))
                            .addComponent(tfSalaryEdit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfEmailEdit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(tfPhoneEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(tfEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfNameEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)
                                .addComponent(jLabel12))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfSurnameEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfAddyEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCBGenderEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbRoleEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbDepartmentEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGap(96, 96, 96)
                                    .addComponent(tfSalaryEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel18)
                                        .addComponent(jLabel17))
                                    .addGap(7, 7, 7)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(tfEmailEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tfDOBEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel19))))))
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        EditTbl.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        EditTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "Name", "Surname", "Gender", "Date of Birth", "E-Mail", "Phone Number", "Address", "Role ID", "Department ID", "Salary"
            }
        ));
        EditTbl.setFillsViewportHeight(true);
        EditTbl.setMinimumSize(new java.awt.Dimension(160, 80));
        EditTbl.setPreferredSize(new java.awt.Dimension(100, 80));
        EditTbl.setShowVerticalLines(true);
        EditTbl.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(EditTbl);
        if (EditTbl.getColumnModel().getColumnCount() > 0) {
            EditTbl.getColumnModel().getColumn(0).setMinWidth(75);
            EditTbl.getColumnModel().getColumn(1).setPreferredWidth(60);
        }

        btnRefreshEditTbl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnRefreshEditTbl.setText("Refresh Table");
        btnRefreshEditTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshEditTblActionPerformed(evt);
            }
        });

        btnCloseEdit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCloseEdit.setText("Back");
        btnCloseEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpEditLayout = new javax.swing.GroupLayout(jpEdit);
        jpEdit.setLayout(jpEditLayout);
        jpEditLayout.setHorizontalGroup(
            jpEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpEditLayout.createSequentialGroup()
                        .addComponent(btnRefreshEditTbl, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCloseEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpEditLayout.setVerticalGroup(
            jpEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEditLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRefreshEditTbl)
                    .addComponent(btnCloseEdit))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Edit Contents", jpEdit);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageEmpJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ManageEmpJFrame().setVisible(true);
        });
    }
    
    //View Employees Tab
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        try {
            if (tfEmpIDView.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please fill in the Employee ID.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int EmployeeID = Integer.parseInt(tfEmpIDView.getText().trim());
            
            db.connect();
            Connection conn = db.getConnection();
            
            if (conn == null) {
                JOptionPane.showMessageDialog(this, "Database connection not established.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            EmployeeD ed = new EmployeeD(conn);
            Employee emp = ed.getEmployeeByID(EmployeeID); 

            if (emp == null) {
                JOptionPane.showMessageDialog(this, "Employee ID not found.", "Error", JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            DefaultTableModel tbmodel = (DefaultTableModel) tblView.getModel();
            tbmodel.setRowCount(0);
            
            tbmodel.addRow(new Object[]{
                emp.getEmployeeID(), emp.getName(), emp.getSurname(), emp.getGender(), emp.getDateOfBirth(),
                emp.getEmail(), emp.getPhoneNumber(), emp.getAddress(), emp.getRoleID(), emp.getDepartmentID(),
                emp.getSalary()
            });
        } 
        catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Invalid Employee ID. Please enter a valid number.", "Input Error", 
                JOptionPane.ERROR_MESSAGE);
            }        
        catch (ClassNotFoundException | SQLException e) 
        {
                JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage(), "Database Error", 
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    //Delete from employee tabs
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            if(tfEmpIDView.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "Please fill in the Employees ID.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            int EmployeeID = Integer.parseInt(tfEmpIDView.getText().trim());
        
            db.connect();
            Connection conn = db.getConnection();
            
            if (conn == null) {
            JOptionPane.showMessageDialog(this, "Database connection not established.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
            }
            
            EmployeeD ed = new EmployeeD(conn);
            ed.deleteEmployee(EmployeeID);
            
        } 
        catch (IllegalArgumentException e) {
        } 
        //multi catch
        catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageEmpJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnDeleteActionPerformed
    
    private void jCBGenderEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBGenderEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBGenderEditActionPerformed

    //Refresh tbl to view updates
    private void btnRefreshEditTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshEditTblActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            db.connect();
            Connection conn = db.getConnection();
            if (conn == null) {
            JOptionPane.showMessageDialog(this, "Database connection not established.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
            }

            try {            
                EmployeeD ed = new EmployeeD(conn);
                java.util.List<employeeapp.model.Employee> employees = ed.getAllEmployees();

                // Define table model
                DefaultTableModel tbmodel = (DefaultTableModel) EditTbl.getModel();
                tbmodel.setRowCount(0); // Clear existing data

                // Populate the table
                for (employeeapp.model.Employee emp : employees) {
                    tbmodel.addRow(new Object[]{emp.getEmployeeID(), emp.getName(), emp.getSurname(), emp.getGender(),emp.getDateOfBirth(),
                        emp.getEmail(), emp.getPhoneNumber(), emp.getAddress(), emp.getRoleID(), emp.getDepartmentID(),
                        emp.getSalary()
                    });
                }
            } 
            catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error fetching employees: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            }
        } 
        catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageEmpJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRefreshEditTblActionPerformed

    //Refresh tbl to view updates
    private void btnRefreshTbl1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshTbl1ActionPerformed
        try {
            // TODO add your handling code here:
            db.connect();
            Connection conn = db.getConnection();
            if (conn == null) {
            JOptionPane.showMessageDialog(this, "Database connection not established.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
            }

            try {            
                EmployeeD ed = new EmployeeD(conn);
                java.util.List<employeeapp.model.Employee> employees = ed.getAllEmployees();

                // Define table model
                DefaultTableModel tbmodel = (DefaultTableModel) tblAdd.getModel();
                tbmodel.setRowCount(0); // Clear existing data

                // Populate the table
                for (employeeapp.model.Employee emp : employees) {
                    tbmodel.addRow(new Object[]{
                        emp.getEmployeeID(),
                        emp.getName(),
                        emp.getSurname(),
                        emp.getGender(),
                        emp.getDateOfBirth(),
                        emp.getEmail(),
                        emp.getPhoneNumber(),
                        emp.getAddress(),
                        emp.getRoleID(),
                        emp.getDepartmentID(),
                        emp.getSalary()
                    });
                }
            } 
            catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error fetching employees: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageEmpJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }   
    }//GEN-LAST:event_btnRefreshTbl1ActionPerformed
    
    //Display tbl contents
    private void btnDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisplayActionPerformed
        try {
            // TODO add your handling code here:
            db.connect();
            Connection conn = db.getConnection();
            if (conn == null) {
            JOptionPane.showMessageDialog(this, "Database connection not established.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
            }

            try {            
                EmployeeD ed = new EmployeeD(conn);
                java.util.List<employeeapp.model.Employee> employees = ed.getAllEmployees();

                // Define table model
                DefaultTableModel tbmodel = (DefaultTableModel) tblView.getModel();
                tbmodel.setRowCount(0); // Clear existing data

                // Populate the table
                for (employeeapp.model.Employee emp : employees) {
                    tbmodel.addRow(new Object[]{emp.getEmployeeID(), emp.getName(), emp.getSurname(), emp.getGender(),emp.getDateOfBirth(),
                        emp.getEmail(), emp.getPhoneNumber(), emp.getAddress(), emp.getRoleID(), emp.getDepartmentID(),
                        emp.getSalary()
                    });
                }
            } 
            catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error fetching employees: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            }
        } 
        catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageEmpJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDisplayActionPerformed
    
    //Add new employee
    private void btnAddEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEmpActionPerformed
        // TODO add your handling code here:
        try {
            // Validate required fields
            if (tfName.getText().trim().isEmpty() || tfSurname.getText().trim().isEmpty() ||
                tfDOB.getText().trim().isEmpty() || tfEmail.getText().trim().isEmpty() ||
                tfPhoneNum.getText().trim().isEmpty() || tfAddy.getText().trim().isEmpty() ||
                tfSalary.getText().trim().isEmpty() || CBGender.getSelectedItem().toString().trim().isEmpty() ||
                cbDepartment.getSelectedItem().toString().trim().isEmpty() || cbRole.getSelectedItem().toString().trim().isEmpty()) {

                JOptionPane.showMessageDialog(this, "Please fill in all the fields.", "Error", JOptionPane.ERROR_MESSAGE);
                return; // Exit if any field is empty
            }

            // Parse Date of Birth
            String sDob = tfDOB.getText().trim();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date dDOB = null;
            try {
                dDOB = sdf.parse(sDob);  // Convert String to java.util.Date
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(this, "Invalid date format. Please use yyyy-MM-dd.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            java.sql.Date sqlDOB = new java.sql.Date(dDOB.getTime());  // Convert to SQL Date

            // Validate Email Format
            String sEmail = tfEmail.getText().trim();
            try {
                validateEmailFormat(sEmail);  // Assuming this is a method to check email format
            } catch (IllegalArgumentException e) {
                JOptionPane.showMessageDialog(this, "Invalid email format: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                return;  // Stop execution if email is invalid
            }

            // Other fields
            String sName = tfName.getText().trim();
            String sSurname = tfSurname.getText().trim();
            String sPhoneNumber = tfPhoneNum.getText().trim();
            String sAddress = tfAddy.getText().trim();
            String sSalaryText = tfSalary.getText().trim();

            // Handle Salary parsing
            double dSalary = 0;
            try {
                dSalary = Double.parseDouble(sSalaryText);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Invalid salary. Please enter a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Get first character for gender
            char cGender = CBGender.getSelectedItem().toString().trim().charAt(0);
            String sRole = cbRole.getSelectedItem().toString().substring(0,3).toUpperCase().trim();
            String sDepart = "";
            
            //Collect Abbriviaton of departments
            switch (cbDepartment.getSelectedIndex()) {
                case 1 -> sDepart = "HR";
                case 2 -> sDepart = "IT";
                case 3 -> sDepart = "FIN";
                case 4 -> sDepart = "MKT";
                default -> throw new AssertionError();
            }

            // Establish Database Connection
            db.connect();
            Connection conn = db.getConnection();

            if (conn == null) {
                JOptionPane.showMessageDialog(this, "Database connection failed.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            try {
                // Create Employee object and add to the database
                EmployeeD ed = new EmployeeD(conn);
                Employee employee = new Employee(sName, sSurname, cGender, sqlDOB, sEmail, sPhoneNumber, sAddress, sRole, sDepart, dSalary);
                ed.addEmployee(employee);
                JOptionPane.showMessageDialog(this, "Employee added successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error while adding employee: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            } catch (ParseException ex) {
                Logger.getLogger(ManageEmpJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageEmpJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error connecting to the database.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnAddEmpActionPerformed

    //Update tbl contents
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        try {
            if (tfNameEdit.getText().trim().isEmpty() || tfSurnameEdit.getText().trim().isEmpty() ||
                tfDOBEdit.getText().trim().isEmpty() || tfEmailEdit.getText().trim().isEmpty() ||
                tfPhoneEdit.getText().trim().isEmpty() || tfAddyEdit.getText().trim().isEmpty() ||
                tfSalaryEdit.getText().trim().isEmpty() || jCBGenderEdit.getSelectedItem().toString().trim().isEmpty() ||
                cbDepartmentEdit.getSelectedItem().toString().trim().isEmpty() ||
                cbRoleEdit.getSelectedItem().toString().trim().isEmpty() || tfEmpID.getText().trim().isEmpty()) {

                JOptionPane.showMessageDialog(this, "Please fill in all the fields.", "Error", JOptionPane.ERROR_MESSAGE);
                return; // Exit if any field is empty
            }

            // Parse Date of Birth
            String sDob = tfDOBEdit.getText().trim();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date dDOB = null;
            try {
                dDOB = sdf.parse(sDob);  // Convert String to java.util.Date
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(this, "Invalid date format. Please use yyyy-MM-dd.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            java.sql.Date sqlDOB = new java.sql.Date(dDOB.getTime());  // Convert to SQL Date

            // Validate Email Format
            String sEmail = tfEmail.getText().trim();
            try {
                validateEmailFormat(sEmail);  // Assuming this is a method to check email format
            } catch (IllegalArgumentException e) {
                JOptionPane.showMessageDialog(this, "Invalid email format: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                return;  // Stop execution if email is invalid
            }

            // Other fields
            String sName = tfName.getText().trim();
            String sSurname = tfSurname.getText().trim();
            String sPhoneNumber = tfPhoneNum.getText().trim();
            String sAddress = tfAddy.getText().trim();
            String sSalaryText = tfSalary.getText().trim();

            // Handle Salary parsing
            double dSalary = 0;
            try {
                dSalary = Double.parseDouble(sSalaryText);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Invalid salary. Please enter a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            char cGender = CBGender.getSelectedItem().toString().trim().charAt(0);  // Get first character for gender
            String sRole = cbRole.getSelectedItem().toString().substring(0,3).toUpperCase().trim();
            String sDepart = "";

            switch (cbDepartment.getSelectedIndex()) {
                case 1 -> sDepart = "HR";
                case 2 -> sDepart = "IT";
                case 3 -> sDepart = "FIN";
                case 4 -> sDepart = "MKT";
                default -> throw new AssertionError();
            }

            // Establish Database Connection
            db.connect();
            Connection conn = db.getConnection();

            if (conn == null) {
                JOptionPane.showMessageDialog(this, "Database connection failed.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            try {
                // Create Employee object and add to the database
                EmployeeD ed = new EmployeeD(conn);
                Employee employee = new Employee(sName, sSurname, cGender, sqlDOB, sEmail, sPhoneNumber, sAddress, sRole, sDepart, dSalary);
                ed.addEmployee(employee);
                JOptionPane.showMessageDialog(this, "Employee added successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
            }
            catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error while adding employee: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            }
            catch (ParseException ex) {
                Logger.getLogger(ManageEmpJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageEmpJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void cbDepartmentEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDepartmentEditActionPerformed
        // TODO  handling code here:
    }//GEN-LAST:event_cbDepartmentEditActionPerformed

    //Return to Management page
    private void btnCloseEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseEditActionPerformed
        // TODO add your handling code here:
        MainJFrame mainJFrame = new MainJFrame();
        mainJFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCloseEditActionPerformed

    //Return to Management page
    private void btnBackAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackAddActionPerformed
        // TODO add your handling code here:
        MainJFrame mainJFrame = new MainJFrame();
        mainJFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackAddActionPerformed

    //Return to Management page
    private void btnBackViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackViewActionPerformed
        // TODO add your handling code here:
        MainJFrame mainJFrame = new MainJFrame();
        mainJFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackViewActionPerformed
    //Add New Tab
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CBGender;
    private javax.swing.JTable EditTbl;
    private javax.swing.JButton btnAddEmp;
    private javax.swing.JButton btnBackAdd;
    private javax.swing.JButton btnBackView;
    private javax.swing.JButton btnCloseEdit;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDisplay;
    private javax.swing.JButton btnRefreshEditTbl;
    private javax.swing.JButton btnRefreshTbl1;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbDepartment;
    private javax.swing.JComboBox<String> cbDepartmentEdit;
    private javax.swing.JComboBox<String> cbRole;
    private javax.swing.JComboBox<String> cbRoleEdit;
    private javax.swing.JComboBox<String> jCBGenderEdit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel jpAdd;
    private javax.swing.JPanel jpEdit;
    private javax.swing.JPanel jpView;
    private javax.swing.JTable tblAdd;
    private javax.swing.JTable tblView;
    private javax.swing.JTextField tfAddy;
    private javax.swing.JTextField tfAddyEdit;
    private javax.swing.JTextField tfDOB;
    private javax.swing.JTextField tfDOBEdit;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfEmailEdit;
    private javax.swing.JTextField tfEmpID;
    private javax.swing.JTextField tfEmpIDView;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfNameEdit;
    private javax.swing.JTextField tfPhoneEdit;
    private javax.swing.JTextField tfPhoneNum;
    private javax.swing.JTextField tfSalary;
    private javax.swing.JTextField tfSalaryEdit;
    private javax.swing.JTextField tfSurname;
    private javax.swing.JTextField tfSurnameEdit;
    // End of variables declaration//GEN-END:variables
}
